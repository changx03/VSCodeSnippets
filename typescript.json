{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create snapApp controller": {
		"prefix": "snapcontroller",
		"body": [
			"import { BaseController } from \"../shared\";",
			"import appController from \"./app-controller\";",
			"import { ${1:Model} } from \"./models\";",
			"",
			"const CAN_EDIT = appController.appConfig.rights.${1:Model}Edit;",
			"",
			"export class ${1:Model}Controller extends BaseController<${1:Model}, ${1:Model}> {",
			"    private static _instance: ${1:Model}Controller;",
			"",
			"    constructor() {",
			"        super(",
			"            {",
			"                canEdit: CAN_EDIT,",
			"                listApiName: \"${1:Model}\",",
			"                keyField: \"${1:Model}ID\",",
			"                createListItem: seed => new ${1:Model}(seed),",
			"            }, {",
			"                canEdit: CAN_EDIT,",
			"                editApiName: \"${1:Model}\",",
			"                keyField: \"${1:Model}ID\",",
			"                createEditItem: seed => new ${1:Model}(seed),",
			"            }",
			"        );",
			"    }",
			"",
			"    static get instance(): ${1:Model}Controller {",
			"        return this._instance || (this._instance = new ${1:Model}Controller());",
			"    }",
			"}"
		],
		"description": "Create snapApp BaseController"
	}
}
